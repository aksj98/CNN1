diff --git a/fashion_train.py b/fashion_train.py
index 548819c..de5bc2a 100644
--- a/fashion_train.py
+++ b/fashion_train.py
@@ -20,18 +20,33 @@
 from tensorflow.keras.utils import to_categorical
 from tensorflow.keras.datasets import fashion_mnist
 from tensorflow.keras.models import Sequential
-from tensorflow.keras.layers import Dense, Flatten, Conv2D, MaxPooling2D, Reshape, Dropout
+from tensorflow.keras.layers import Dense, Flatten, Conv2D, MaxPooling2D, Reshape, Dropout,LeakyReLU
+import tensorflow
+import keras
 import wandb
 from wandb.keras import WandbCallback
 
 # logging code
 run = wandb.init(project="fashion")
+config = run.config
+config.first_layer_convs = 32
+config.first_layer_conv_width = 3
+config.first_layer_conv_height = 3
+config.dropout = 0.2
+config.dense_layer_size = 128
+config.img_width = 28
+config.img_height = 28
+config.epochs = 10
+config.activation = "relu"
 
 # load data
 (X_train, y_train), (X_test, y_test) = fashion_mnist.load_data()
 img_width = X_train.shape[1]
 img_height = X_train.shape[2]
-
+X_train = X_train.reshape(
+    X_train.shape[0], 28,28, 1)
+X_test = X_test.reshape(
+    X_test.shape[0], 28, 28, 1)
 # one hot encode outputs
 y_train = to_categorical(y_train)
 y_test = to_categorical(y_test)
@@ -46,11 +61,26 @@ num_classes = y_train.shape[1]
 
 # create model
 model = Sequential()
-model.add(Flatten(input_shape=(img_width, img_height, 1)))
-model.add(Dense(num_classes, activation="relu"))
-model.add(Dense(num_classes, activation="softmax"))
+model.add(Conv2D(32,
+                 (config.first_layer_conv_width, config.first_layer_conv_height),
+                 input_shape=(28, 28, 1),
+                 activation=config.activation))
+model.add(LeakyReLU(alpha=0.1))
+model.add(MaxPooling2D(pool_size=(2, 2)))
+model.add(Conv2D(64,
+                 (3, 3),
+                 activation=config.activation))
+model.add(LeakyReLU(alpha=0.1))
+model.add(MaxPooling2D(pool_size=(2, 2)))
+model.add(Flatten())
+model.add(Dense(config.dense_layer_size, activation=config.activation))
+model.add(LeakyReLU(alpha=0.1))
+model.add(Dropout(0.4))
+model.add(Dense(num_classes, activation='softmax'))
+
 model.compile(loss='categorical_crossentropy', optimizer='adam',
               metrics=['accuracy'])
+model.summary()
 
 # Fit the model
 model.fit(X_train, y_train, epochs=10, validation_data=(X_test, y_test),
diff --git a/keras_cnn.py b/keras_cnn.py
index 879d732..f955c59 100644
--- a/keras_cnn.py
+++ b/keras_cnn.py
@@ -1,4 +1,4 @@
-# from lukas/mlclass
+*# from lukas/mlclass
 from keras.datasets import mnist
 from keras.models import Sequential
 from keras.layers import Conv2D, MaxPooling2D, Dropout, Dense, Flatten
@@ -37,7 +37,7 @@ y_test = np_utils.to_categorical(y_test)
 num_classes = y_test.shape[1]
 labels = range(10)
 
-# build model
+#- build model
 model = Sequential()
 model.add(Conv2D(32,
                  (config.first_layer_conv_width, config.first_layer_conv_height),
